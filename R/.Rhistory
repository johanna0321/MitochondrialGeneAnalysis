View(line_genes_by_sex)
View(data_filtered)
# Note that this function greps for the subpath, does not filter
#subpath = "OXPHOS"
subpath =  "Fatty acid oxidation"
#subpath =  "TCA"
#subpath = "Pyruvate metabolism"
plot_data <- data_filtered %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Pathways)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
# Note that this function greps for the subpath, does not filter
#subpath = "OXPHOS"
subpath =  "Fatty acid oxidation"
#subpath =  "TCA"
#subpath = "Pyruvate metabolism"
plot_data <- data_filtered %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
ynames <- plot_data %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data) +
geom_tile(aes(fill=log2FoldChange,y=external_gene_name,x=Sex,color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual("MitoCarta",values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
#ggsave(filename = "Fatty-Acid-Oxidation-genes-sex-significant.pdf",
#       plot = p,
#       path = "/Users/johf/Desktop/FAO-Figures/",
#       device = "pdf",
#       units = 'in',
#       height = 6.79, width = 2.29)
p
View(mitocarta_pathway_data)
View(mitocarta_data_formatted)
View(mitocarta_data_formatted[["MitoCartaPathways"]])
# Note that this function greps for the subpath, does not filter
#subpath = "OXPHOS"
subpath =  "Fatty acid oxidation"
#subpath =  "TCA"
#subpath = "Pyruvate metabolism"
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
ynames <- plot_data %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data) +
geom_tile(aes(fill=log2FoldChange,y=external_gene_name,x=Sex,color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual("MitoCarta",values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
#ggsave(filename = "Fatty-Acid-Oxidation-genes-sex-significant.pdf",
#       plot = p,
#       path = "/Users/johf/Desktop/FAO-Figures/",
#       device = "pdf",
#       units = 'in',
#       height = 6.79, width = 2.29)
p
View(plot_data)
# Note that this function greps for the subpath, does not filter
#subpath = "OXPHOS"
#subpath =  "Fatty acid oxidation"
subpath =  "TCA"
#subpath = "Pyruvate metabolism"
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
ynames <- plot_data %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data) +
geom_tile(aes(fill=log2FoldChange,y=external_gene_name,x=Sex,color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual("MitoCarta",values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
#ggsave(filename = "Fatty-Acid-Oxidation-genes-sex-significant.pdf",
#       plot = p,
#       path = "/Users/johf/Desktop/FAO-Figures/",
#       device = "pdf",
#       units = 'in',
#       height = 6.79, width = 2.29)
p
# Note that this function greps for the subpath, does not filter
#subpath = "OXPHOS"
#subpath =  "Fatty acid oxidation"
#subpath =  "TCA"
subpath = "Pyruvate metabolism"
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
ynames <- plot_data %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data) +
geom_tile(aes(fill=log2FoldChange,y=external_gene_name,x=Sex,color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual("MitoCarta",values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
#ggsave(filename = "Fatty-Acid-Oxidation-genes-sex-significant.pdf",
#       plot = p,
#       path = "/Users/johf/Desktop/FAO-Figures/",
#       device = "pdf",
#       units = 'in',
#       height = 6.79, width = 2.29)
p
# Note that this function greps for the subpath, does not filter
#subpath = "OXPHOS"
#subpath =  "Fatty acid oxidation"
#subpath =  "TCA"
#subpath = "Pyruvate metabolism"
subpath = "Complex I"
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
ynames <- plot_data %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data) +
geom_tile(aes(fill=log2FoldChange,y=external_gene_name,x=Sex,color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual("MitoCarta",values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
#ggsave(filename = "Fatty-Acid-Oxidation-genes-sex-significant.pdf",
#       plot = p,
#       path = "/Users/johf/Desktop/FAO-Figures/",
#       device = "pdf",
#       units = 'in',
#       height = 6.79, width = 2.29)
p
mito_heatmaps <- list()
for(subpath in c("OXPHOS","Fatty acid oxidation","TCA","Pyruvate metabolism")) {
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
ynames <- plot_data %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data) +
geom_tile(aes(fill=log2FoldChange,y=external_gene_name,x=Sex,color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual("MitoCarta",values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
print(p)
mito_list[[subpath]] <- p
}
mito_heatmaps <- list()
for(subpath in c("OXPHOS","Fatty acid oxidation","TCA","Pyruvate metabolism")) {
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
ynames <- plot_data %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data) +
geom_tile(aes(fill=log2FoldChange,y=external_gene_name,x=Sex,color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual("MitoCarta",values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
print(p)
mito_heatmaps[[subpath]] <- p
}
mito_heatmaps <- list()
for(subpath in c("OXPHOS","Fatty acid oxidation","TCA","Pyruvate metabolism")) {
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
ynames <- plot_data %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data) +
geom_tile(aes(fill=log2FoldChange,y=external_gene_name,x=Sex,color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual("MitoCarta",values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ggtitle(subpath) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
print(p)
mito_heatmaps[[subpath]] <- p
}
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path)
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name")
View(gene_name_conversion)
View(plot_data)
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path)
View(plot_data)
View(gene_names_checked)
View(mitocarta_data$MitoCartaPathways)
View(mitocarta_data$MitoCartaGenes)
View(mitocarta_data_formatted[["MitoCartaGenes"]])
View(gene_names_checked)
plot_data <- mitocarta_data_formatted[["MitoCartaGenes"]] %>%
dplyr::select(Name,Pathways) %>%
dplyr::rename(mitocarta_id = Name) %>%
dplyr::left_join(., gene_names_check, by = "mitocarta_id")
View(gene_names_checked)
plot_data <- mitocarta_data_formatted[["MitoCartaGenes"]] %>%
dplyr::select(Name,Pathways) %>%
dplyr::rename(mitocarta_id = Name) %>%
dplyr::left_join(., gene_names_checked, by = "mitocarta_id")
View(plot_data)
plot_data <- mitocarta_data_formatted[["MitoCartaGenes"]] %>%
dplyr::select(Name,Pathways) %>%
dplyr::rename(mitocarta_id = Name) %>%
dplyr::left_join(., gene_names_checked, by = "mitocarta_id") %>%
na.omit()
View(plot_data)
plot_data <- mitocarta_data_formatted[["MitoCartaGenes"]] %>%
dplyr::select(Name,Pathways) %>%
dplyr::rename(mitocarta_id = Name) %>%
dplyr::left_join(., gene_names_checked, by = "mitocarta_id") %>%
dplyr::na.omit() %>%
dplyr::rename(external_gene_name = given_id) %>%
dplyr::left_join(line_genes_by_sex, ., by = "external_gene_name")
?na.omit
plot_data <- mitocarta_data_formatted[["MitoCartaGenes"]] %>%
dplyr::select(Name,Pathways) %>%
dplyr::rename(mitocarta_id = Name) %>%
dplyr::left_join(., gene_names_checked, by = "mitocarta_id") %>%
stats::na.omit() %>%
dplyr::rename(external_gene_name = given_id) %>%
dplyr::left_join(line_genes_by_sex, ., by = "external_gene_name")
View(plot_data)
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
ynames <- plot_data %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data) +
geom_tile(aes(fill=log2FoldChange, y=external_gene_name, x=Sex, color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
#scale_color_manual("MitoCarta",values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ggtitle(subpath) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
print(p)
plot_data <- data_all %>%
dplyr::select(external_gene_name,Name,Main.Path) %>%
left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
mutate(MitoCarta = ifelse(gene_id %in% unique(data_filtered$gene_id), "Yes", "No")) %>%
mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
ynames <- plot_data %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data) +
geom_tile(aes(fill=log2FoldChange, y=external_gene_name, x=Sex, color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual(values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ggtitle(subpath) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
print(p)
mito_heatmaps <- list()
plot_data <- mitocarta_data_formatted[["MitoCartaGenes"]] %>%
# From the list of MitoCarta genes, select gene names and their pathways
dplyr::select(Name,Pathways) %>%
dplyr::rename(mitocarta_id = Name) %>%
# For this study, join with the list of checked gene symbols
dplyr::left_join(., gene_names_checked, by = "mitocarta_id") %>%
stats::na.omit() %>%
dplyr::rename(external_gene_name = given_id) %>%
# For this study, join with gene list with genes row bound by sex
dplyr::left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
# Any genes that are missing a Significance identifier, mark as not Significant
dplyr::mutate(Significant = ifelse(is.na(Significant),"No",Significant))
for(subpath in c("OXPHOS","Fatty acid oxidation","TCA","Pyruvate metabolism")) {
plot_data_temp <- plot_data
filter(grepl(subpath, Main.Path)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
#plot_data <- data_all %>%
#  dplyr::select(external_gene_name,Name,Main.Path) %>%
#  left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
#  mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
#  filter(grepl(subpath, Main.Path)) %>%
#  filter(external_gene_name != "",external_gene_name != ".") %>%
#  group_by(external_gene_name, Sex) %>%
#  slice_head(n=1)
ynames <- plot_data_temp %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data_temp) +
geom_tile(aes(fill=log2FoldChange, y=external_gene_name, x=Sex, color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual(values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ggtitle(subpath) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
print(p)
mito_heatmaps[[subpath]] <- p
}
View(plot_data)
mito_heatmaps <- list()
plot_data <- mitocarta_data_formatted[["MitoCartaGenes"]] %>%
# From the list of MitoCarta genes, select gene names and their pathways
dplyr::select(Name,Pathways) %>%
dplyr::rename(mitocarta_id = Name) %>%
# For this study, join with the list of checked gene symbols
dplyr::left_join(., gene_names_checked, by = "mitocarta_id") %>%
stats::na.omit() %>%
dplyr::rename(external_gene_name = given_id) %>%
# For this study, join with gene list with genes row bound by sex
dplyr::left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
# Any genes that are missing a Significance identifier, mark as not Significant
dplyr::mutate(Significant = ifelse(is.na(Significant),"No",Significant))
for(subpath in c("OXPHOS","Fatty acid oxidation","TCA","Pyruvate metabolism")) {
plot_data_temp <- plot_data %>%
filter(grepl(subpath, Pathways)) %>%
filter(external_gene_name != "",external_gene_name != ".") %>%
group_by(external_gene_name, Sex) %>%
slice_head(n=1)
#plot_data <- data_all %>%
#  dplyr::select(external_gene_name,Name,Main.Path) %>%
#  left_join(line_genes_by_sex, ., by = "external_gene_name") %>%
#  mutate(Significant = ifelse(is.na(Significant),"No",Significant)) %>%
#  filter(grepl(subpath, Main.Path)) %>%
#  filter(external_gene_name != "",external_gene_name != ".") %>%
#  group_by(external_gene_name, Sex) %>%
#  slice_head(n=1)
ynames <- plot_data_temp %>% arrange(external_gene_name) %>% pull(external_gene_name)
p <- ggplot(plot_data_temp) +
geom_tile(aes(fill=log2FoldChange, y=external_gene_name, x=Sex, color=Significant),
width=0.90,height=1.65, linewidth = 0.3) +
scale_fill_gradient2("Log2FC",low="darkgreen",mid="white",high="firebrick", midpoint=0, limits = c(-2.3,2.3)) +
scale_color_manual(values=c("white","black")) +
scale_y_discrete(limits= rev(ynames)) +
ggtitle(subpath) +
ylab("") +
xlab("") +
theme(axis.ticks =element_blank(),
axis.text.x = element_text(angle=90),
strip.text = element_text(size=10),
axis.text.y = element_text(size=10),
panel.background = element_blank())
print(p)
mito_heatmaps[[subpath]] <- p
}
##################################################
##                                              ##
##    User-friendly function for graphing       ##
##     the number of genes in a filtered        ##
##    dataset or the percentage of genes in     ##
##   in this dataset that occupy a pathway      ##
##                                              ##
##################################################
for(plot_name in c("Primary","OXPHOS","Metabolism","Metals and cofactors",
"Lipid metabolism", "Carbohydrate metabolism", "Amino acid metabolism")){
temp_plot <- plot_mitocarta_pathways(mitocarta_pathways_assigned = data_filtered,
mitocarta_data_formatted = mitocarta_data_formatted,
subpath = plot_name,
fc_name = "log2FC_mean")
print(temp_plot[["GeneNumber"]])
temp_plot_no_legend <- temp_plot[["PathwayPercent"]] + ggplot2::theme(legend.position = "none")
print(temp_plot_no_legend)
}
logFC_legend <- cowplot::get_legend(temp_plot[["PathwayPercent"]])
grid.newpage()
grid.draw(logFC_legend)
length(mitocarta_data$MitoCartaGenes)
nrow(mitocarta_data$MitoCartaGenes)
length(mitocarta_data$MitoCartaGenes$Symbol %in% gene_names_checked$mitocarta_id)
length(mitocarta_data$MitoCartaGenes$Symbol %in% na.omit(gene_names_checked$mitocarta_id))
mitocarta_data$MitoCartaGenes$Symbol %in% na.omit(gene_names_checked$mitocarta_id)
sum(is.na(gene_names_checked$given_id))
sum(is.na(gene_names_checked$mitocarta_id))
length(mitocarta_data$MitoCartaGenes$Symbol)
table(mitocarta_data$MitoCartaGenes$Symbol %in% na.omit(gene_names_checked$mitocarta_id))
table(mitocarta_data$MitoCartaGenes$Symbol %in% na.omit(gene_names_checked$mitocarta_id))[[2]]
print(paste0("This filter results in a dataset with ", length(unique(data_filtered$gene_id)), " mitochondrial genes that are significantly differentially expressed between HCR and LCR when sexes are combined"))
print(paste0("Of ",length(mitocarta_data$MitoCartaGenes$Symbol)," mitochondrial genes annotated by MitoCarta, ",
table(mitocarta_data$MitoCartaGenes$Symbol %in% na.omit(gene_names_checked$mitocarta_id))[[2]], "(",
round(table(mitocarta_data$MitoCartaGenes$Symbol %in% na.omit(gene_names_checked$mitocarta_id))[[2]]/length(mitocarta_data$MitoCartaGenes$Symbol),2)*100, "%) of these genes were present in my provided dataset"))
print(paste0("This filter results in a dataset with ", length(unique(data_filtered$gene_id)), " mitochondrial genes that are significantly differentially expressed between HCR and LCR when sexes are combined"))
print(paste0("Of ",length(mitocarta_data$MitoCartaGenes$Symbol)," mitochondrial genes annotated by MitoCarta, ",
table(mitocarta_data$MitoCartaGenes$Symbol %in% na.omit(gene_names_checked$mitocarta_id))[[2]], " (",
round(table(mitocarta_data$MitoCartaGenes$Symbol %in% na.omit(gene_names_checked$mitocarta_id))[[2]]/length(mitocarta_data$MitoCartaGenes$Symbol),3)*100, "%) of these genes were present in my provided dataset"))
print(paste0("Of ",length(mitocarta_data$MitoCartaGenes$Symbol)," mitochondrial genes annotated by MitoCarta, ",
table(mitocarta_data$MitoCartaGenes$Symbol %in% na.omit(gene_names_checked$mitocarta_id))[[2]], " (",
round(table(mitocarta_data$MitoCartaGenes$Symbol %in% na.omit(gene_names_checked$mitocarta_id))[[2]]/length(mitocarta_data$MitoCartaGenes$Symbol),3)*100, "%) of these genes were present in my provided dataset"))
print(paste0("This filter results in a dataset with ", length(unique(data_filtered$gene_id)), " mitochondrial genes that are significantly differentially expressed between HCR and LCR when sexes are combined"))
